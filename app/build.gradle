apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    defaultConfig {
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion
        compileSdkVersion Versions.compileSdkVersion
        versionCode Versions.versionCode
        versionName Versions.versionName
        resConfigs "en"

        buildConfigField "String", "API_USER", getenv("API_USER")
        buildConfigField "String", "API_PASSWORD", getenv("API_PASSWORD")
    }

    lintOptions {
        abortOnError true
    }
}

dependencies {
    implementation project(Projects.baseMvp)
    implementation project(Projects.baseRepository)

    implementation Dependencies.kotlin

    implementation Dependencies.appCompat
    implementation Dependencies.recyclerView
    implementation Dependencies.cardView
    implementation Dependencies.constraintLayout
    implementation(Dependencies.googleMaps) {
        exclude group: Dependencies.googleMapsExclude
    }

    implementation Dependencies.timber
    implementation Dependencies.butterknife
    kapt Dependencies.butterknifeCompiler

    kapt Dependencies.daggerCompiler
    implementation Dependencies.daggerAndroid
    kapt Dependencies.daggerAndroidProcessor
    implementation Dependencies.daggerAndroidSupport

    implementation Dependencies.rxAndroid

    // Tests
    testImplementation Dependencies.mockitoKotlin
    testImplementation Dependencies.kluent
}

private static def getenv(String varName) {
    def var = System.getenv(varName)
    if (var != null && !var.empty) {
        return "\"$var\""
    } else {
        throw new Exception("$varName not found in environment variables!")
    }
}
